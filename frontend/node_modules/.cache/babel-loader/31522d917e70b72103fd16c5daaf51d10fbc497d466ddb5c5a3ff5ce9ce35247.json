{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\DevPal\\\\frontend\\\\src\\\\Components\\\\ChatWindow.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatWindow = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const chatEndRef = useRef(null);\n  useEffect(() => {\n    var _chatEndRef$current;\n    (_chatEndRef$current = chatEndRef.current) === null || _chatEndRef$current === void 0 ? void 0 : _chatEndRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages, isTyping]);\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      sender: \"user\",\n      text: input\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput(\"\");\n    setIsTyping(true);\n    try {\n      // Instead of waiting for full response, stream it\n      const response = await fetch(\"http://127.0.0.1:8000/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          user_input: userMessage.text\n        })\n      });\n      const reader = response.body.getReader();\n      let botText = \"\";\n      const decoder = new TextDecoder();\n      while (true) {\n        const {\n          done,\n          value\n        } = await reader.read();\n        if (done) break;\n        botText += decoder.decode(value, {\n          stream: true\n        });\n        setMessages(prev => [...prev.filter(m => m !== userMessage), userMessage, {\n          sender: \"bot\",\n          text: botText\n        }]);\n      }\n    } catch (err) {\n      console.error(\"Error:\", err);\n      setMessages(prev => [...prev, {\n        sender: \"bot\",\n        text: \"⚠️ Server error\"\n      }]);\n    } finally {\n      setIsTyping(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"450px\",\n      height: \"600px\",\n      margin: \"20px auto\",\n      borderRadius: \"12px\",\n      background: \"#f9f9f9\",\n      boxShadow: \"0 4px 20px rgba(0, 0, 0, 0.1)\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      fontFamily: \"Arial, sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        overflowY: \"auto\",\n        padding: \"15px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: \"10px\"\n      },\n      children: [messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          alignSelf: msg.sender === \"user\" ? \"flex-end\" : \"flex-start\",\n          background: msg.sender === \"user\" ? \"#0078ff\" : \"#e5e5ea\",\n          color: msg.sender === \"user\" ? \"white\" : \"black\",\n          padding: \"10px 14px\",\n          borderRadius: msg.sender === \"user\" ? \"16px 16px 0 16px\" : \"16px 16px 16px 0\",\n          maxWidth: \"70%\",\n          wordWrap: \"break-word\",\n          fontSize: \"14px\",\n          transition: \"all 0.2s ease\"\n        },\n        children: msg.text\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: \"13px\",\n          fontStyle: \"italic\",\n          color: \"#888\"\n        },\n        children: \"Bot is typing...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: chatEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        padding: \"10px\",\n        borderTop: \"1px solid #ddd\",\n        background: \"#f1f1f1\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type your message...\",\n        onKeyDown: e => e.key === \"Enter\" && sendMessage(),\n        style: {\n          flex: 1,\n          padding: \"10px\",\n          borderRadius: \"8px\",\n          border: \"1px solid #ccc\",\n          outline: \"none\",\n          fontSize: \"14px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        style: {\n          marginLeft: \"10px\",\n          padding: \"10px 16px\",\n          background: \"#0078ff\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"8px\",\n          cursor: \"pointer\"\n        },\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatWindow, \"u+pYYdojCxdsFHJ2jmAERvKatus=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","ChatWindow","_s","messages","setMessages","input","setInput","isTyping","setIsTyping","chatEndRef","_chatEndRef$current","current","scrollIntoView","behavior","sendMessage","trim","userMessage","sender","text","prev","response","fetch","method","headers","body","JSON","stringify","user_input","reader","getReader","botText","decoder","TextDecoder","done","value","read","decode","stream","filter","m","err","console","error","style","width","height","margin","borderRadius","background","boxShadow","display","flexDirection","fontFamily","children","flex","overflowY","padding","gap","map","msg","i","alignSelf","color","maxWidth","wordWrap","fontSize","transition","fileName","_jsxFileName","lineNumber","columnNumber","fontStyle","ref","borderTop","type","onChange","e","target","placeholder","onKeyDown","key","border","outline","onClick","marginLeft","cursor","_c","$RefreshReg$"],"sources":["C:/Project/DevPal/frontend/src/Components/ChatWindow.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst ChatWindow = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const chatEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    chatEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages, isTyping]);\r\n\r\n  const sendMessage = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    const userMessage = { sender: \"user\", text: input };\r\n    setMessages((prev) => [...prev, userMessage]);\r\n    setInput(\"\");\r\n    setIsTyping(true);\r\n\r\n    try {\r\n      // Instead of waiting for full response, stream it\r\n      const response = await fetch(\"http://127.0.0.1:8000/chat\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ user_input: userMessage.text }),\r\n      });\r\n\r\n      const reader = response.body.getReader();\r\n      let botText = \"\";\r\n      const decoder = new TextDecoder();\r\n\r\n      while (true) {\r\n        const { done, value } = await reader.read();\r\n        if (done) break;\r\n        botText += decoder.decode(value, { stream: true });\r\n        setMessages((prev) => [\r\n          ...prev.filter((m) => m !== userMessage),\r\n          userMessage,\r\n          { sender: \"bot\", text: botText },\r\n        ]);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error:\", err);\r\n      setMessages((prev) => [\r\n        ...prev,\r\n        { sender: \"bot\", text: \"⚠️ Server error\" },\r\n      ]);\r\n    } finally {\r\n      setIsTyping(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"450px\",\r\n        height: \"600px\",\r\n        margin: \"20px auto\",\r\n        borderRadius: \"12px\",\r\n        background: \"#f9f9f9\",\r\n        boxShadow: \"0 4px 20px rgba(0, 0, 0, 0.1)\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        fontFamily: \"Arial, sans-serif\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          flex: 1,\r\n          overflowY: \"auto\",\r\n          padding: \"15px\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          gap: \"10px\",\r\n        }}\r\n      >\r\n        {messages.map((msg, i) => (\r\n          <div\r\n            key={i}\r\n            style={{\r\n              alignSelf: msg.sender === \"user\" ? \"flex-end\" : \"flex-start\",\r\n              background: msg.sender === \"user\" ? \"#0078ff\" : \"#e5e5ea\",\r\n              color: msg.sender === \"user\" ? \"white\" : \"black\",\r\n              padding: \"10px 14px\",\r\n              borderRadius:\r\n                msg.sender === \"user\"\r\n                  ? \"16px 16px 0 16px\"\r\n                  : \"16px 16px 16px 0\",\r\n              maxWidth: \"70%\",\r\n              wordWrap: \"break-word\",\r\n              fontSize: \"14px\",\r\n              transition: \"all 0.2s ease\",\r\n            }}\r\n          >\r\n            {msg.text}\r\n          </div>\r\n        ))}\r\n        {isTyping && (\r\n          <div style={{ fontSize: \"13px\", fontStyle: \"italic\", color: \"#888\" }}>\r\n            Bot is typing...\r\n          </div>\r\n        )}\r\n        <div ref={chatEndRef} />\r\n      </div>\r\n\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          padding: \"10px\",\r\n          borderTop: \"1px solid #ddd\",\r\n          background: \"#f1f1f1\",\r\n        }}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          placeholder=\"Type your message...\"\r\n          onKeyDown={(e) => e.key === \"Enter\" && sendMessage()}\r\n          style={{\r\n            flex: 1,\r\n            padding: \"10px\",\r\n            borderRadius: \"8px\",\r\n            border: \"1px solid #ccc\",\r\n            outline: \"none\",\r\n            fontSize: \"14px\",\r\n          }}\r\n        />\r\n        <button\r\n          onClick={sendMessage}\r\n          style={{\r\n            marginLeft: \"10px\",\r\n            padding: \"10px 16px\",\r\n            background: \"#0078ff\",\r\n            color: \"white\",\r\n            border: \"none\",\r\n            borderRadius: \"8px\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          Send\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatWindow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}